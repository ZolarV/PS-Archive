// Constant defines 
 var ID = '1sPww3PIOdAiL1z1Vn8PDC1qUdww0mfu6HSy6m7tZuu8';
 var Root = SpreadsheetApp.openById(ID);
 var ST = 'Status Tracker';
 var UA = 'Usage Archive';

//Copies cell and pastes data in archive
function CopyCell(Thisrow) {
  
  // Psuedo Code
  // Using the row number
  // Copy the range of collumns
  // Insert data into Archival as an "insert row" type function where it pushes old data down. 
  // clear Status tracker Current Row of saved data

  var Source =  Root.getSheetByName(ST); 
  var Dest = Root.getSheetByName(UA);
  var Values = Source.getRange('E'+Thisrow,'J'+Thisrow);
  InsertRow();
  Values.copyTo(Dest.getRange(3,1));
}

// inserts new row at 3, pushing down older data to bottom
function InsertRow(){
 var Source = Root.getSheetByName(UA)
 // Shifts all rows down by one
 Source.insertRows(3);
}


// gets rows needed for copying. 
// Filter by Checkbox (data needing xfered for archival)
// Get Row number for data

function Filter(){
 
  var Source = Root.getSheetByName(ST);
  var Dest = Root.getSheetByName(UA);
  var Validation = Source.getRange("L3:L7");
  var rownum = 3;
  for ( var it=1; it <= 5 ; it++ ){
  var thing = Validation.getCell(it, 1).getValue();
    if (thing == true ){
      Dest.insertRows(3);
      (Source.getRange(rownum,5,1,6)).copyTo(Dest.getRange(3,1));
      (Source.getRange(rownum,5,1,6)).clearContent();
      Validation.getCell(it, 1).setValue(false);
    }
    rownum++;
  }
}